package com.main;
 
import java.awt.event.KeyAdapter;  ( abstract class receving keybord event & creating listner object)
import java.awt.event.KeyEvent;   (indicate keystroke in component, works for key pressed,relesed, typed)

public class KeyInput extends KeyAdapter{   (manage keyinput)
 
	private Board lp;
	private boolean lup = false;   ( it indicates true /false & primtive type, its a method)
	private boolean ldown = false;
	
	private Board rp;
	private boolean rup = false;
	private boolean rdown = false;
	
	public KeyInput(Board p1, Board p2) {
		
		lp = p1;
		rp = p2;
	}
	
	public void keyPressed(KeyEvent e) { (invoke when key is pressed)
		int key = e.getKeyCode();  (returns the value of the variable name, takes a parameter, used to refer to the current object.)
		
	if (key == KeyEvent.VK_UP) {
		rp.switchDirections(-1);
		rup = true;
	}
	if (key == KeyEvent.VK_DOWN) {
		rp.switchDirections(1);
		rdown = true;
	}
	if (key == KeyEvent.VK_W) { 
		lp.switchDirections(-1);
		lup = true;	
	}
	if (key == KeyEvent.VK_S) {
		lp.switchDirections(1);
		ldown = true;
	}
	
	if (key == KeyEvent.VK_ESCAPE) {
		System.exit(1);  ( Generally used to indicate successful termination. exit(1) or exit(-1) or any other non-zero value â€“ Generally indicates unsuccessful termination0
	}
	}
	
	public void keyReleased(KeyEvent e) {
		int key = e.getKeyCode();

		if (key == KeyEvent.VK_UP) {
			rup = false;
		}
		if (key == KeyEvent.VK_DOWN) {
			rdown = false;
		}
		if (key == KeyEvent.VK_W) {
			lup = false;
		}
		if (key == KeyEvent.VK_S) {
			ldown = false;
		}

		if (!lup && !ldown)
			lp.stop();
		if (!rup && !rdown)
			rp.stop();

	}

}

